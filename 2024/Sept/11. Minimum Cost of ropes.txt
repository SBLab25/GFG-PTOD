//Back-end complete function Template for Java
class Solution {
    // Function to return the minimum cost of connecting the ropes.
    public long minCost(long[] arr) {
        // code here
        PriorityQueue<Long> pq=new PriorityQueue<>();
        for(int i=0;i<arr.length;i++){
            pq.add(arr[i]);
        }
        long result=0;
        if(pq.isEmpty()){
            return 0;
        }
        while(pq.size()>1){
            long p=pq.poll();
            long q=0;
            if(!pq.isEmpty()){ q=pq.poll();}
            long d=p+q;
            result+=d;
            pq.add(d);
        }
        return result;
    }
}