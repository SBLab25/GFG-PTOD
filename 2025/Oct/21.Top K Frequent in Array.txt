class Solution {
    public ArrayList<Integer> topKFreq(int[] arr, int k) {
        // Code here
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int val : arr){
            map.put(val, map.getOrDefault(val, 0) + 1);
        }
        PriorityQueue<Map.Entry<Integer, Integer>> pq =new PriorityQueue<>((a,b) -> a.getValue().equals(b.getValue()) ? a.getKey() - b.getKey() : a.getValue() - b.getValue());
        
        for(Map.Entry<Integer, Integer> ele: map.entrySet()){
            pq.offer(ele);
            if(pq.size() > k){
                pq.poll();
            }
        }
        ArrayList<Integer> result = new ArrayList<>();
        while(!pq.isEmpty()){
            result.add(pq.poll().getKey());
        }
        Collections.reverse(result);
        return result;
    }
}
